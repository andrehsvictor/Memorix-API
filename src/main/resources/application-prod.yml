spring:
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      ssl:
        enabled: ${REDIS_SSL_ENABLED:false}

    mongodb:
      host: ${MONGODB_HOST}
      port: ${MONGODB_PORT:27017}
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      database: ${MONGODB_DATABASE}
      uuid-representation: standard
      ssl:
        enabled: ${MONGODB_SSL_ENABLED:false}

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    ssl:
      enabled: ${RABBITMQ_SSL_ENABLED:false}

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  port: ${PORT:8080}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: never

logging:
  level:
    root: INFO
    andrehsvictor.memorix: INFO

memorix:
  minio:
    endpoint: ${MINIO_ENDPOINT}
    access-key: ${MINIO_ACCESS_KEY}
    secret-key: ${MINIO_SECRET_KEY}
    bucket-name: ${MINIO_BUCKET_NAME}
  jwt:
    rsa:
      public-key:
        path: ${JWT_PUBLIC_KEY_PATH}
      private-key:
        path: ${JWT_PRIVATE_KEY_PATH}
    access-token:
      lifetime: ${JWT_ACCESS_TOKEN_LIFETIME:15m}
    refresh-token:
      lifetime: ${JWT_REFRESH_TOKEN_LIFETIME:1h}
  action-tokens:
    reset-password:
      lifetime: ${ACTION_TOKEN_RESET_PASSWORD_LIFETIME:15m}
    verify-email:
      lifetime: ${ACTION_TOKEN_VERIFY_EMAIL_LIFETIME:15m}
    change-email:
      lifetime: ${ACTION_TOKEN_CHANGE_EMAIL_LIFETIME:15m}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
    max-age: ${CORS_MAX_AGE:3600}